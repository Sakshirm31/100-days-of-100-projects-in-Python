##main.py##
from turtle import Screen
from paddle import Paddle
from ball import Ball
import time
from scoreboard import Scoreboard


screen=Screen()
screen.bgcolor("black")
screen.setup(width=800,height=600)
screen.title("PONG")
screen.tracer(0)

paddle_r=Paddle(350,0)
paddle_l=Paddle(-350,0)
ball=Ball()
score=Scoreboard()

screen.listen()
screen.onkey(paddle_r.go_up,'Up')
screen.onkey(paddle_r.go_down,'Down')
screen.onkey(paddle_l.go_up,'w')
screen.onkey(paddle_l.go_down,'s')


game_is_on=True
while game_is_on:
    time.sleep(ball.move_speed)
    screen.update()
    ball.move()

    if ball.ycor()>280 or ball.ycor()<-280:
       ball.bounce_y()


    if ball.distance(paddle_r)<50 and ball.xcor()>320 or ball.distance(paddle_l)<50 and ball.xcor()<-320:
        ball.bounce_x()

    if ball.xcor()>380:
        ball.reset_position()
        score.l_point()

    if ball.xcor()<-380:
        ball.reset_position()
        score.r_point()


screen.exitonclick()


###paddle.py###
from turtle import Turtle
class Paddle(Turtle):
    def __init__(self, x, y):
        super().__init__()
        self.shape('square')
        self.color("white")
        self.penup()
        self.shapesize(stretch_wid=5, stretch_len=1)
        self.goto(x, y)

    def go_up(self):
        new_y = self.ycor() + 20
        self.goto(self.xcor(), new_y)

    def go_down(self):
        new_y = self.ycor() - 20
        self.goto(self.xcor(), new_y)


###ball.py###
from turtle import Turtle

class Ball(Turtle):
    def __init__(self):
        super().__init__()
        self.shape('circle')
        self.color('white')
        self.penup()
        self.x_move=10
        self.y_move=10
        self.move_speed = 0.1

    def move(self):
        x=self.xcor()+self.x_move
        y=self.ycor()+self.y_move
        self.goto(x,y)

    def bounce_y(self):
        self.y_move *= -1

    def bounce_x(self):
        self.x_move *= -1
        self.move_speed *= 0.9

    def reset_position(self):
        self.goto(0,0)
        self.move_speed = 0.1
        self.bounce_x()


###scoreboard.py###
from turtle import Turtle

class Scoreboard(Turtle):
   def __init__(self):
       super().__init__()
       self.color('white')
       self.penup()
       self.hideturtle()
       self.l_score=0
       self.r_score=0
       self.update_score()


   def update_score(self):
       self.clear()
       self.goto(-100,200)
       self.write(self.l_score,align="center",font=("courier",80,"normal"))
       self.goto(100,200)
       self.write(self.r_score, align="center", font=("courier", 80, "normal"))

   def l_point(self):
       self.l_score +=1
       self.update_score()

   def r_point(self):
       self.r_score +=1
       self.update_score()
